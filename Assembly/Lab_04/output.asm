
PUBLIC OUT_MATRIX
PUBLIC OUTPUT_SYM
PUBLIC ENTERR

EXTRN MAT: BYTE
EXTRN ROW_NUM: BYTE
EXTRN COL_NUM: BYTE
EXTRN MAX: BYTE

DATAS SEGMENT WORD PUBLIC 'DATA'
	MGS DB 'MATRIX: $'
DATAS ENDS

CODES SEGMENT WORD PUBLIC 'CODE'
	ASSUME CS:CODES, DS:DATAS

OUTPUT_SYM:
	mov ah, 2
	int 21h
	ret
	
ENTERR:
	mov dl, 0Ah
	call OUTPUT_SYM
	mov dl, 0Dh
	call OUTPUT_SYM
	ret
	
OUT_MATRIX:
	call ENTERR
	
	MOV DL, MAX
	ADD DL, '0'
	CALL OUTPUT_SYM
	CALL ENTERR
	
	MOV DX, OFFSET MGS
	MOV AH, 09H
	INT 21H
	CALL ENTERR
	
	XOR BX, BX
	MOV BL, COL_NUM
	
	mov AL, ROW_NUM
	mul COL_NUM
	mov cx, ax
	CMP cX, 0
	JE END_OUTPUT_LOOP
	
	call ENTERR
	xor SI, SI
	XOR DI, DI
	
	OUTPUT_LOOP:
		mov dl, MAT[SI]
		call OUTPUT_SYM
		
		add SI, 1
		ADD DI, 1
		CMP DI, BX
		JNE L1
		XOR DI, DI
		CALL ENTERR
		L1:
		LOOP OUTPUT_LOOP
	END_OUTPUT_LOOP:
	
	ret

CODES ENDS
END